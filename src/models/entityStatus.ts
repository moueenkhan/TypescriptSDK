/**
 * Yapstone Staged On-Boarding ServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { EntityStateEnum, entityStateEnumSchema } from './entityStateEnum';
import {
  EntityStatusHistory,
  entityStatusHistorySchema,
} from './entityStatusHistory';
import { ValidationStatus, validationStatusSchema } from './validationStatus';

export interface EntityStatus {
  state?: EntityStateEnum;
  disabledReasons?: string[];
  history?: EntityStatusHistory[];
  validation?: ValidationStatus;
}

export const entityStatusSchema: Schema<EntityStatus> = object({
  state: ['state', optional(entityStateEnumSchema)],
  disabledReasons: ['disabledReasons', optional(array(string()))],
  history: ['history', optional(array(lazy(() => entityStatusHistorySchema)))],
  validation: ['validation', optional(lazy(() => validationStatusSchema))],
});
