/**
 * Yapstone Staged On-Boarding ServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string, unknown } from '../schema';
import { Capabilities, capabilitiesSchema } from './capabilities';
import { Parent, parentSchema } from './parent';

export interface BaseType2 {
  type?: string;
  parent?: Parent;
  displayName?: string;
  capabilities?: Capabilities;
  preferences?: unknown;
}

export const baseType2Schema: Schema<BaseType2> = object({
  type: ['type', optional(string())],
  parent: ['parent', optional(lazy(() => parentSchema))],
  displayName: ['displayName', optional(string())],
  capabilities: ['capabilities', optional(lazy(() => capabilitiesSchema))],
  preferences: ['preferences', optional(unknown())],
});
