/**
 * Yapstone Staged On-Boarding ServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  FieldSpecification,
  fieldSpecificationSchema,
} from './fieldSpecification';
import {
  LegalEntityTypeEnum,
  legalEntityTypeEnumSchema,
} from './legalEntityTypeEnum';
import {
  RequiredIdentityDocuments,
  requiredIdentityDocumentsSchema,
} from './requiredIdentityDocuments';

export interface CustomerSpecification {
  /** the second description of type parameter */
  type?: LegalEntityTypeEnum;
  /** ISO 3166-1 alpha-2 or alpha-3 country code. */
  country?: string;
  commerceType?: string;
  requiredFields?: string[];
  additional?: FieldSpecification[];
  /** A list of required identity documents, each entity in the list should be considered as an OR condition. Only a single entry need be satisfied. */
  identityDocuments?: RequiredIdentityDocuments[];
}

export const customerSpecificationSchema: Schema<CustomerSpecification> = object(
  {
    type: ['type', optional(legalEntityTypeEnumSchema)],
    country: ['country', optional(string())],
    commerceType: ['commerceType', optional(string())],
    requiredFields: ['requiredFields', optional(array(string()))],
    additional: [
      'additional',
      optional(array(lazy(() => fieldSpecificationSchema))),
    ],
    identityDocuments: [
      'identityDocuments',
      optional(array(lazy(() => requiredIdentityDocumentsSchema))),
    ],
  }
);
