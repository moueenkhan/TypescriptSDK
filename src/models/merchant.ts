/**
 * Yapstone Staged On-Boarding ServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, dict, lazy, object, optional, Schema, string } from '../schema';
import { Capabilities, capabilitiesSchema } from './capabilities';
import { Consent, consentSchema } from './consent';
import { CorrelationRef, correlationRefSchema } from './correlationRef';
import { EntityStatus, entityStatusSchema } from './entityStatus';
import { LegalEntity, legalEntitySchema } from './legalEntity';
import {
  MerchantPreferences,
  merchantPreferencesSchema,
} from './merchantPreferences';
import { MerchantTypeEnum, merchantTypeEnumSchema } from './merchantTypeEnum';
import {
  MerchantVolumeProjection,
  merchantVolumeProjectionSchema,
} from './merchantVolumeProjection';
import { Parent, parentSchema } from './parent';

export interface Merchant {
  id?: string;
  created?: string;
  updated?: string;
  correlationRefs?: CorrelationRef[];
  metadata?: Record<string, string>;
  type?: MerchantTypeEnum;
  parent?: Parent;
  displayName?: string;
  country?: string;
  timezone?: string;
  defaultCurrency?: string;
  defaultLanguage?: string;
  /** **Important !** Depending on the value of the `type` parameter, the `LegalEntity` model is extended with either [`IndividualLegalEntity`]($m/IndividualLegalEntity) or [`BusinessLegalEntity`]($m/BusinessLegalEntity) */
  legalEntity?: LegalEntity;
  volumeProjection?: MerchantVolumeProjection;
  consents?: Consent[];
  capabilities?: Capabilities;
  preferences?: MerchantPreferences;
  status?: EntityStatus;
}

export const merchantSchema: Schema<Merchant> = object({
  id: ['id', optional(string())],
  created: ['created', optional(string())],
  updated: ['updated', optional(string())],
  correlationRefs: [
    'correlationRefs',
    optional(array(lazy(() => correlationRefSchema))),
  ],
  metadata: ['metadata', optional(dict(string()))],
  type: ['type', optional(merchantTypeEnumSchema)],
  parent: ['parent', optional(lazy(() => parentSchema))],
  displayName: ['displayName', optional(string())],
  country: ['country', optional(string())],
  timezone: ['timezone', optional(string())],
  defaultCurrency: ['defaultCurrency', optional(string())],
  defaultLanguage: ['defaultLanguage', optional(string())],
  legalEntity: ['legalEntity', optional(lazy(() => legalEntitySchema))],
  volumeProjection: [
    'volumeProjection',
    optional(lazy(() => merchantVolumeProjectionSchema)),
  ],
  consents: ['consents', optional(array(lazy(() => consentSchema)))],
  capabilities: ['capabilities', optional(lazy(() => capabilitiesSchema))],
  preferences: ['preferences', optional(lazy(() => merchantPreferencesSchema))],
  status: ['status', optional(lazy(() => entityStatusSchema))],
});
