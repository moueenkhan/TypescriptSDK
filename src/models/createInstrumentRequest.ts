/**
 * Yapstone Staged On-Boarding ServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, dict, lazy, object, optional, Schema, string } from '../schema';
import { Address, addressSchema } from './address';
import { CorrelationRef, correlationRefSchema } from './correlationRef';
import {
  InstrumentOptions,
  instrumentOptionsSchema,
} from './instrumentOptions';
import { NameOnAccount, nameOnAccountSchema } from './nameOnAccount';
import { Parent, parentSchema } from './parent';

export interface CreateInstrumentRequest {
  correlationRefs?: CorrelationRef[];
  metadata?: Record<string, string>;
  options?: InstrumentOptions;
  parent?: Parent;
  type: string;
  currency: string;
  /** ISO 3166-1 alpha-2 or alpha-3 country code. */
  country: string;
  displayName?: string;
  namesOnAccount: NameOnAccount[];
  address?: Address;
  details: Record<string, string>;
}

export const createInstrumentRequestSchema: Schema<CreateInstrumentRequest> = object(
  {
    correlationRefs: [
      'correlationRefs',
      optional(array(lazy(() => correlationRefSchema))),
    ],
    metadata: ['metadata', optional(dict(string()))],
    options: ['options', optional(lazy(() => instrumentOptionsSchema))],
    parent: ['parent', optional(lazy(() => parentSchema))],
    type: ['type', string()],
    currency: ['currency', string()],
    country: ['country', string()],
    displayName: ['displayName', optional(string())],
    namesOnAccount: ['namesOnAccount', array(lazy(() => nameOnAccountSchema))],
    address: ['address', optional(lazy(() => addressSchema))],
    details: ['details', dict(string())],
  }
);
