/**
 * Yapstone Staged On-Boarding ServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { RiskDecisionEnum, riskDecisionEnumSchema } from './riskDecisionEnum';
import {
  RiskRequiredAction,
  riskRequiredActionSchema,
} from './riskRequiredAction';
import {
  RiskStatusHistory,
  riskStatusHistorySchema,
} from './riskStatusHistory';

export interface RiskStatus {
  decision?: RiskDecisionEnum;
  declinedReasons?: string[];
  requiredActions?: RiskRequiredAction[];
  history?: RiskStatusHistory[];
}

export const riskStatusSchema: Schema<RiskStatus> = object({
  decision: ['decision', optional(riskDecisionEnumSchema)],
  declinedReasons: ['declinedReasons', optional(array(string()))],
  requiredActions: [
    'requiredActions',
    optional(array(lazy(() => riskRequiredActionSchema))),
  ],
  history: ['history', optional(array(lazy(() => riskStatusHistorySchema)))],
});
