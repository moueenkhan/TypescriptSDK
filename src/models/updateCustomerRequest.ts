/**
 * Yapstone Staged On-Boarding ServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, dict, lazy, object, optional, Schema, string } from '../schema';
import { CorrelationRef, correlationRefSchema } from './correlationRef';
import { CustomerOptions, customerOptionsSchema } from './customerOptions';
import {
  LegalEntityRequest,
  legalEntityRequestSchema,
} from './legalEntityRequest';

export interface UpdateCustomerRequest {
  correlationRefs?: CorrelationRef[];
  metadata?: Record<string, string>;
  displayName?: string;
  /** ISO 3166-1 alpha-2 or alpha-3 country code. */
  country: string;
  timezone?: string;
  defaultCurrency?: string;
  defaultLanguage?: string;
  /** **Important !** Depending on the value of the `type` parameter, the `LegalEntityRequest` model is extended with either [`IndividualLegalEntityRequest`]($m/IndividualLegalEntityRequest) or [`BusinessLegalEntityRequest`]($m/BusinessLegalEntityRequest) */
  legalEntity: LegalEntityRequest;
  options?: CustomerOptions;
}

export const updateCustomerRequestSchema: Schema<UpdateCustomerRequest> = object(
  {
    correlationRefs: [
      'correlationRefs',
      optional(array(lazy(() => correlationRefSchema))),
    ],
    metadata: ['metadata', optional(dict(string()))],
    displayName: ['displayName', optional(string())],
    country: ['country', string()],
    timezone: ['timezone', optional(string())],
    defaultCurrency: ['defaultCurrency', optional(string())],
    defaultLanguage: ['defaultLanguage', optional(string())],
    legalEntity: ['legalEntity', lazy(() => legalEntityRequestSchema)],
    options: ['options', optional(lazy(() => customerOptionsSchema))],
  }
);
