<?php

declare(strict_types=1);

/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace YapstoneStagedOnBoardingServicesLib\Models;

use stdClass;

class Address implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $line1;

    /**
     * @var string|null
     */
    private $line2;

    /**
     * @var string|null
     */
    private $line3;

    /**
     * @var string|null
     */
    private $line4;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var string|null
     */
    private $state;

    /**
     * @var string|null
     */
    private $postalCode;

    /**
     * @var string|null
     */
    private $country;

    /**
     * Returns Line 1.
     * Address line 1 (Street address/PO Box/Company name).
     */
    public function getLine1(): ?string
    {
        return $this->line1;
    }

    /**
     * Sets Line 1.
     * Address line 1 (Street address/PO Box/Company name).
     *
     * @maps line1
     */
    public function setLine1(?string $line1): void
    {
        $this->line1 = $line1;
    }

    /**
     * Returns Line 2.
     * Address line 2 (Apartment/Suite/Unit/Building).
     */
    public function getLine2(): ?string
    {
        return $this->line2;
    }

    /**
     * Sets Line 2.
     * Address line 2 (Apartment/Suite/Unit/Building).
     *
     * @maps line2
     */
    public function setLine2(?string $line2): void
    {
        $this->line2 = $line2;
    }

    /**
     * Returns Line 3.
     */
    public function getLine3(): ?string
    {
        return $this->line3;
    }

    /**
     * Sets Line 3.
     *
     * @maps line3
     */
    public function setLine3(?string $line3): void
    {
        $this->line3 = $line3;
    }

    /**
     * Returns Line 4.
     */
    public function getLine4(): ?string
    {
        return $this->line4;
    }

    /**
     * Sets Line 4.
     *
     * @maps line4
     */
    public function setLine4(?string $line4): void
    {
        $this->line4 = $line4;
    }

    /**
     * Returns City.
     * City/District/Suburb/Town/Village.
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     * City/District/Suburb/Town/Village.
     *
     * @maps city
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns State.
     * State/County/Province/Region.
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     * State/County/Province/Region.
     *
     * @maps state
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Postal Code.
     * ZIP or postal code
     */
    public function getPostalCode(): ?string
    {
        return $this->postalCode;
    }

    /**
     * Sets Postal Code.
     * ZIP or postal code
     *
     * @maps postalCode
     */
    public function setPostalCode(?string $postalCode): void
    {
        $this->postalCode = $postalCode;
    }

    /**
     * Returns Country.
     * ISO 3166-1 alpha-2 or alpha-3 country code.
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * ISO 3166-1 alpha-2 or alpha-3 country code.
     *
     * @maps country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->line1)) {
            $json['line1']      = $this->line1;
        }
        if (isset($this->line2)) {
            $json['line2']      = $this->line2;
        }
        if (isset($this->line3)) {
            $json['line3']      = $this->line3;
        }
        if (isset($this->line4)) {
            $json['line4']      = $this->line4;
        }
        if (isset($this->city)) {
            $json['city']       = $this->city;
        }
        if (isset($this->state)) {
            $json['state']      = $this->state;
        }
        if (isset($this->postalCode)) {
            $json['postalCode'] = $this->postalCode;
        }
        if (isset($this->country)) {
            $json['country']    = $this->country;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
