<?php

declare(strict_types=1);

/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace YapstoneStagedOnBoardingServicesLib\Models;

use stdClass;
use YapstoneStagedOnBoardingServicesLib\Utils\DateTimeHelper;

class RiskStatusHistory implements \JsonSerializable
{
    /**
     * @var \DateTime|null
     */
    private $timestamp;

    /**
     * @var string|null
     */
    private $decision;

    /**
     * @var string[]|null
     */
    private $declinedReasons;

    /**
     * @var RiskRequiredAction[]|null
     */
    private $requiredActions;

    /**
     * Returns Timestamp.
     */
    public function getTimestamp(): ?\DateTime
    {
        return $this->timestamp;
    }

    /**
     * Sets Timestamp.
     *
     * @maps timestamp
     * @factory \YapstoneStagedOnBoardingServicesLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setTimestamp(?\DateTime $timestamp): void
    {
        $this->timestamp = $timestamp;
    }

    /**
     * Returns Decision.
     */
    public function getDecision(): ?string
    {
        return $this->decision;
    }

    /**
     * Sets Decision.
     *
     * @maps decision
     * @factory \YapstoneStagedOnBoardingServicesLib\Models\RiskDecisionEnum::checkValue
     */
    public function setDecision(?string $decision): void
    {
        $this->decision = $decision;
    }

    /**
     * Returns Declined Reasons.
     *
     * @return string[]|null
     */
    public function getDeclinedReasons(): ?array
    {
        return $this->declinedReasons;
    }

    /**
     * Sets Declined Reasons.
     *
     * @maps declinedReasons
     *
     * @param string[]|null $declinedReasons
     */
    public function setDeclinedReasons(?array $declinedReasons): void
    {
        $this->declinedReasons = $declinedReasons;
    }

    /**
     * Returns Required Actions.
     *
     * @return RiskRequiredAction[]|null
     */
    public function getRequiredActions(): ?array
    {
        return $this->requiredActions;
    }

    /**
     * Sets Required Actions.
     *
     * @maps requiredActions
     *
     * @param RiskRequiredAction[]|null $requiredActions
     */
    public function setRequiredActions(?array $requiredActions): void
    {
        $this->requiredActions = $requiredActions;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->timestamp)) {
            $json['timestamp']       = DateTimeHelper::toRfc3339DateTime($this->timestamp);
        }
        if (isset($this->decision)) {
            $json['decision']        = RiskDecisionEnum::checkValue($this->decision);
        }
        if (isset($this->declinedReasons)) {
            $json['declinedReasons'] = $this->declinedReasons;
        }
        if (isset($this->requiredActions)) {
            $json['requiredActions'] = $this->requiredActions;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
