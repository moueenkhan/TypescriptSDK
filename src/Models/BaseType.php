<?php

declare(strict_types=1);

/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace YapstoneStagedOnBoardingServicesLib\Models;

use stdClass;

/**
 * @discriminator type
 * @discriminatorType BaseType
 */
class BaseType implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $type;

    /**
     * @var Parent|null
     */
    private $parent;

    /**
     * @var string|null
     */
    private $displayName;

    /**
     * @var array|null
     */
    private $preferences;

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Parent.
     */
    public function getParent(): ?Parent
    {
        return $this->parent;
    }

    /**
     * Sets Parent.
     *
     * @maps parent
     */
    public function setParent(?Parent $parent): void
    {
        $this->parent = $parent;
    }

    /**
     * Returns Display Name.
     */
    public function getDisplayName(): ?string
    {
        return $this->displayName;
    }

    /**
     * Sets Display Name.
     *
     * @maps displayName
     */
    public function setDisplayName(?string $displayName): void
    {
        $this->displayName = $displayName;
    }

    /**
     * Returns Preferences.
     */
    public function getPreferences(): ?array
    {
        return $this->preferences;
    }

    /**
     * Sets Preferences.
     *
     * @maps preferences
     */
    public function setPreferences(?array $preferences): void
    {
        $this->preferences = $preferences;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['type']            = $this->type;
        if (isset($this->parent)) {
            $json['parent']      = $this->parent;
        }
        if (isset($this->displayName)) {
            $json['displayName'] = $this->displayName;
        }
        if (isset($this->preferences)) {
            $json['preferences'] = $this->preferences;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
