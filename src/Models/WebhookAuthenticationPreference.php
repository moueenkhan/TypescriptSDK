<?php

declare(strict_types=1);

/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace YapstoneStagedOnBoardingServicesLib\Models;

use stdClass;

class WebhookAuthenticationPreference implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $value;

    /**
     * Returns Type.
     * The authentication mechanism to use when making webhook callbacks to client URLs.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     * The authentication mechanism to use when making webhook callbacks to client URLs.
     *
     * @maps type
     * @factory \YapstoneStagedOnBoardingServicesLib\Models\Type2Enum::checkValue
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Value.
     * For a type of AUTHORIZATION_HEADER this value should contain what will be placed into the
     * Authorization header, for each webhook callback. When reading back this preference from a response
     * this value field will contain a masked version of the originally supplied value.
     * For a type of TLS_CLIENT_AUTHENTICATION this value should be left empty, and the server side will
     * populate here the Public Key half in PEM format. This Public Key should then be used by the webhook
     * implementation to authenticate the caller.
     */
    public function getValue(): ?string
    {
        return $this->value;
    }

    /**
     * Sets Value.
     * For a type of AUTHORIZATION_HEADER this value should contain what will be placed into the
     * Authorization header, for each webhook callback. When reading back this preference from a response
     * this value field will contain a masked version of the originally supplied value.
     * For a type of TLS_CLIENT_AUTHENTICATION this value should be left empty, and the server side will
     * populate here the Public Key half in PEM format. This Public Key should then be used by the webhook
     * implementation to authenticate the caller.
     *
     * @maps value
     */
    public function setValue(?string $value): void
    {
        $this->value = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->type)) {
            $json['type']  = Type2Enum::checkValue($this->type);
        }
        if (isset($this->value)) {
            $json['value'] = $this->value;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
