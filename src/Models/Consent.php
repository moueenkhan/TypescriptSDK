<?php

declare(strict_types=1);

/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace YapstoneStagedOnBoardingServicesLib\Models;

use stdClass;
use YapstoneStagedOnBoardingServicesLib\Utils\DateTimeHelper;

/**
 * **Important !** If the value of the `type` parameter is `DIRECT_DEBIT`, the `Consent` model can be
 * extended with [`DirectDebitConsent`]($m/DirectDebitConsent)
 */
class Consent implements \JsonSerializable
{
    /**
     * @var string
     */
    private $type;

    /**
     * @var \DateTime
     */
    private $timeOfConsent;

    /**
     * @var int
     */
    private $version;

    /**
     * @param string $type
     * @param \DateTime $timeOfConsent
     * @param int $version
     */
    public function __construct(string $type, \DateTime $timeOfConsent, int $version)
    {
        $this->type = $type;
        $this->timeOfConsent = $timeOfConsent;
        $this->version = $version;
    }

    /**
     * Returns Type.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @required
     * @maps type
     * @factory \YapstoneStagedOnBoardingServicesLib\Models\Type1Enum::checkValue
     */
    public function setType(string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Time of Consent.
     */
    public function getTimeOfConsent(): \DateTime
    {
        return $this->timeOfConsent;
    }

    /**
     * Sets Time of Consent.
     *
     * @required
     * @maps timeOfConsent
     * @factory \YapstoneStagedOnBoardingServicesLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setTimeOfConsent(\DateTime $timeOfConsent): void
    {
        $this->timeOfConsent = $timeOfConsent;
    }

    /**
     * Returns Version.
     */
    public function getVersion(): int
    {
        return $this->version;
    }

    /**
     * Sets Version.
     *
     * @required
     * @maps version
     */
    public function setVersion(int $version): void
    {
        $this->version = $version;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['type']          = Type1Enum::checkValue($this->type);
        $json['timeOfConsent'] = DateTimeHelper::toRfc3339DateTime($this->timeOfConsent);
        $json['version']       = $this->version;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
