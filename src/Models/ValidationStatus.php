<?php

declare(strict_types=1);

/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace YapstoneStagedOnBoardingServicesLib\Models;

use stdClass;

class ValidationStatus implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $state;

    /**
     * @var ValidationAction[]|null
     */
    private $requiredActions;

    /**
     * Returns State.
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     *
     * @maps state
     * @factory \YapstoneStagedOnBoardingServicesLib\Models\StateEnum::checkValue
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Required Actions.
     *
     * @return ValidationAction[]|null
     */
    public function getRequiredActions(): ?array
    {
        return $this->requiredActions;
    }

    /**
     * Sets Required Actions.
     *
     * @maps requiredActions
     *
     * @param ValidationAction[]|null $requiredActions
     */
    public function setRequiredActions(?array $requiredActions): void
    {
        $this->requiredActions = $requiredActions;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->state)) {
            $json['state']           = StateEnum::checkValue($this->state);
        }
        if (isset($this->requiredActions)) {
            $json['requiredActions'] = $this->requiredActions;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
